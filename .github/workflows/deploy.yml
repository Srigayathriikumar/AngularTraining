name: Deploy All Projects to GitHub Pages

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Build Angular Projects
        run: |
          # Build day1-project
          if [ -f "day1/day1-project/package.json" ]; then
            echo "Building day1-project"
            cd day1/day1-project
            npm ci --legacy-peer-deps || npm install --legacy-peer-deps
            npm run build -- --base-href="/AngularTraining/day1/day1-project/" || npm run build
            cd ../..
          fi
          
          # Build portfolio
          if [ -f "day2/portfolio/package.json" ]; then
            echo "Building portfolio"
            cd day2/portfolio
            npm ci --legacy-peer-deps || npm install --legacy-peer-deps
            npm run build -- --base-href="/AngularTraining/day2/portfolio/" || npm run build
            cd ../..
          fi
          
          # Build student-portal
          if [ -f "assessment/student-portal/package.json" ]; then
            echo "Building student-portal"
            cd assessment/student-portal
            npm ci --legacy-peer-deps || npm install --legacy-peer-deps
            npm run build -- --base-href="/AngularTraining/assessment/student-portal/" || npm run build
            cd ../..
          fi
      
      - name: Create deployment directory
        run: |
          mkdir -p deploy
          cp index.html deploy/
          cp .nojekyll deploy/
          
          echo "Checking built projects:"
          find . -name "dist" -type d
          
          # Copy Angular builds
          if [ -d "day1/day1-project/dist" ]; then
            echo "Copying day1-project"
            mkdir -p deploy/day1/day1-project
            if [ -d "day1/day1-project/dist/day1-project/browser" ]; then
              cp -r day1/day1-project/dist/day1-project/browser/* deploy/day1/day1-project/
            elif [ -d "day1/day1-project/dist/day1-project" ]; then
              cp -r day1/day1-project/dist/day1-project/* deploy/day1/day1-project/
            else
              cp -r day1/day1-project/dist/* deploy/day1/day1-project/
            fi
          fi
          
          if [ -d "day2/portfolio/dist" ]; then
            echo "Copying portfolio"
            mkdir -p deploy/day2/portfolio
            if [ -d "day2/portfolio/dist/portfolio/browser" ]; then
              cp -r day2/portfolio/dist/portfolio/browser/* deploy/day2/portfolio/
            elif [ -d "day2/portfolio/dist/portfolio" ]; then
              cp -r day2/portfolio/dist/portfolio/* deploy/day2/portfolio/
            else
              cp -r day2/portfolio/dist/* deploy/day2/portfolio/
            fi
          fi
          
          if [ -d "assessment/student-portal/dist" ]; then
            echo "Copying student-portal"
            mkdir -p deploy/assessment/student-portal
            if [ -d "assessment/student-portal/dist/student-portal/browser" ]; then
              cp -r assessment/student-portal/dist/student-portal/browser/* deploy/assessment/student-portal/
            elif [ -d "assessment/student-portal/dist/student-portal" ]; then
              cp -r assessment/student-portal/dist/student-portal/* deploy/assessment/student-portal/
            else
              cp -r assessment/student-portal/dist/* deploy/assessment/student-portal/
            fi
          fi
          
          # Copy TypeScript projects as static files
          mkdir -p deploy/day1/typescript
          echo '<!DOCTYPE html><html><head><title>TypeScript Projects</title></head><body><h1>TypeScript Projects</h1><a href="ts-proj1/">Ts-proj1</a><br><a href="ts-proj1phase2/">Ts-proj1phase2</a><br><a href="ts-proj2/">Ts-proj2</a></body></html>' > deploy/day1/typescript/index.html
          
          for proj in Ts-proj1 Ts-proj1phase2 Ts-proj2; do
            if [ -d "day1/$proj" ]; then
              mkdir -p "deploy/day1/typescript/$proj"
              cp -r "day1/$proj"/* "deploy/day1/typescript/$proj/"
            fi
          done
          
          echo "Deploy directory contents:"
          find deploy -type f | head -20
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: deploy

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
